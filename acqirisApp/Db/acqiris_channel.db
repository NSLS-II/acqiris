## configure individual channel: input range, offset, triggering,etc.
## 	  get raw waveform data, process data by subArray record;
#MON NSLS2 naming [PSy[:PI]][-SSy[:SI]][-TSy[:TI]]{Dev[:DI]}[SgN[:SgI][-SgD]] 
#### Psy	-	Primary system
#### Ssy	-	Secondary system
#### Dev	-	Device name
## CHANNEL  -	#channel of the board(MODULE); "0" refers to the first channel  
## MODULE   -	"0" is the first digitizer found during initialization.
##       For Acqiris crate and CPU, it's the top slot if there's one digitizer  
## NELM     -	(max.) number of elements of waveform record 

#raw waveform data: 8-bit (DC265) or 16-bit (10- or 12-bit digitizer)
#FTVL by default is SHORT. 
#FTVL is changed to CHAR for 8-bit digitizer in acqiris_drv_wf.cpp
record(waveform,"${MON}Raw-Wf")
{
   field(SCAN,"I/O Intr")
   field(DESC,"Raw waveform data")
   field(DTYP,"acqiris")
   field(NELM,"${NELM}")
   field(FTVL,"SHORT")
   field(INP,"@M${MODULE} C${CHANNEL} WRAW")
   field(FLNK,"${MON}Raw-aSub_")
}

record(ao,"${MON}FullScale-SP")
{
   field(DESC,"Input Voltage Range")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CFLSC")
   field(PINI,"YES")
   field(SCAN,"Passive")
   field(DRVH,"5.0")
   field(DRVL,"-5.0")
   field(HOPR,"5.0")
   field(LOPR,"-5.0")
   field(EGU,"V")
   field(PREC,"3")
   #seems 'VAL' doesn't work well here. use 'RVAL'
   #Nov-15-2011: RVAL is long type
   #info(autosaveFields_pass0, "RVAL")
   info(autosaveFields_pass1, "VAL")
}

record(ao,"${MON}RangeOffset-SP")
{
   field(DESC,"Offset for Input Range")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} COFFS")
   field(PINI,"YES")
   field(SCAN,"Passive")
   field(DRVH,"5.0")
   field(DRVL,"-5.0")
   field(HOPR,"5.0")
   field(LOPR,"-5.0")
   field(EGU,"V")
   field(PREC,"3")
    #seems 'VAL' doesn't work well here. use 'RVAL'
    #info(autosaveFields_pass0, "RVAL")
    info(autosaveFields_pass1, "VAL")
}

record(ao,"${MON}PeakThreshold-SP")
{
   field(DESC,"Threshold for searching peak")
   field(DRVH,"5.0")
   field(DRVL,"-5.0")
   field(HOPR,"5.0")
   field(LOPR,"-5.0")
   field(EGU,"V")
   field(PREC,"4")
   info(autosaveFields_pass0, "VAL")
}

#coefficient for calculation of absolute bunch charge of WCM, FC, etc.  
record(ao,"${MON}CoefBunchQ-SP")
{
   field(DESC,"Coefficient")
   field(PINI,"YES")
   field(VAL, "1.0")
   field(PREC,"4")
   info(autosaveFields_pass0, "VAL")
}

record(longout,"${MON}NbrSamplesForSum-SP")
{
   field(DESC,"NumberOfSamplesForIntegral")
   field(PINI,"YES")
   field(DRVH,"${NELM}")
   field(DRVL,"5")
   field(HOPR,"${NELM}")
   field(LOPR,"5")
   field(EGU,"Samples")
   info(autosaveFields_pass0, "VAL")
   field(FLNK,"${MON}NbrSamplesForSum-Calc_")
 }

record(calc,"${MON}NbrSamplesForSum-Calc_")
{
   field(DESC,"NumberShouldBeOdd")
   field(INPA,"${MON}NbrSamplesForSum-SP")
   field(CALC,"(A%2 = 0) ? (A+1):A")
   info(autosaveFields_pass0, "VAL")
}

#Why need ZeroingOffset?
#there might be DC offset between the FCT and the digitizer without real beam
#ZeroingOffset-SP == AveVolt-I
record(bo,"${MON}AutoZeroing-Sel")
{
   field(DESC,"auto zeroing offset")
   field(PINI,"YES")
   field(ZNAM,"NoAutoZero")
   field(ONAM,"AutoZero")
   info(autosaveFields_pass0, "VAL")
}

#StartPoint, EndPoint are changed in ${MON}Raw-aSub_; 
#need scanning to get processed again
record(fanout, "${MON}Scan-Fout_")
{
    field(SCAN, "2 second")
    field(LNK1,"${MON}StartPoint-SP")
    field(LNK2,"${MON}EndPoint-SP")
}

record(ao,"${MON}ZeroingOffset-SP")
{
   field(DESC,"Manually zeroing noise")
   field(PINI,"YES")
   #field(INP,"${MON}Raw-aSub_.G")
   field(DRVH,"5.0")
   field(DRVL,"-5.0")
   field(HOPR,"5.0")
   field(LOPR,"-5.0")  
   field(EGU,"V")
   field(PREC,"4")
   info(autosaveFields_pass0, "VAL")
   #field(FLNK,"${MON}StartPoint-SP")
}

#${MON}SumQ-I --> FLNK --> ${MON}AutoZeroingOffset-I
record(ai,"${MON}AutoZeroingOffset-I")
{
   field(DESC,"automatically zeroing offset")
   field(INP,"${MON}Raw-aSub_.O")  
   field(EGU,"V")
   field(PREC,"6")
}

record(longout,"${MON}AcqTimeout-SP")
{
   #AcqrsD1_waitForEndOfAcquisition(id, timeout);
   #'timeout' is internally clipped to a range of [0, 10000] milliseconds
   field(DESC,"AcquisitionTimeout(ms)")
   field(PINI,"YES")
   field(DRVH,"10000")
   field(DRVL,"2000")
   field(HOPR,"10000")
   field(LOPR,"2000") 
   field(EGU,"ms")
   info(autosaveFields_pass0, "VAL")
 }

#Selected region of interest (ROI): start, end 
record(longout,"${MON}StartPoint-SP")
{
   field(DESC,"start sample point of selected region")
   field(PINI,"YES")
   field(DRVH, "${NELM}")
   field(DRVL, "1")
   field(HOPR, "${NELM}")
   field(LOPR, "1")
   field(VAL, "1")   
   info(autosaveFields_pass0, "VAL")
   field(FLNK,"${MON}ROISamples-I")
   #field(FLNK,"${MON}EndPoint-SP")
}

record(longout,"${MON}EndPoint-SP")
{
   field(DESC,"end sample point of selected region")
   field(PINI,"YES")
   field(DRVH, "${NELM}")
   field(DRVL, "2")
   field(HOPR, "${NELM}")
   field(LOPR, "2")
   field(VAL, "${NELM}")    
   info(autosaveFields_pass0, "VAL")
   field(FLNK,"${MON}ROISamples-I")
}
 
## see acqiris_asub_process.cpp: process the waveform record: voltage, 
#max, min, ave, std, number of bunches(peaks/pulse counts), 
#filling pattern(integral, normalization, etc.), 
#individual bunch charge calibrated against ICT;
record(aSub,"${MON}Raw-aSub_")
{
    field(DESC,"process raw waveform data")
    field (INAM,"acqirisAsubInit")
    field (SNAM,"acqirisAsubProcess")
    #get raw data (integer) from the waveform record above
    field (INPA, "${MON}Raw-Wf")
    #FTA by default is SHORT. 
    #don't change FTA to CHAR for 8-bit digitizer in acqiris_asub_process.cpp
    field (FTA, "SHORT")
    field (NOA, "${NELM}")
    #get input range (Full scale)   
    field (INPB, "${MON}FullScale-SP")
    field (FTB, "DOUBLE")
    field (NOB, "1")
    #get offset for input range   
    field (INPC, "${MON}RangeOffset-SP")
    field (FTC, "DOUBLE")
    field (NOC, "1")
    #get peak threshold   
    field (INPD, "${MON}PeakThreshold-SP")
    field (FTD, "DOUBLE")
    field (NOD, "1")
    #number of samples for integral value(individual bunch charge)   
    field (INPE, "${MON}NbrSamplesForSum-Calc_")
    #${MON}NbrSamplesForSum-calc_.VAL seems double, but it works here
    field (FTE, "LONG")
    field (NOE, "1")
    #coefficient for calculating absolute bunch charge of wall current monitor  
    field (INPF, "${MON}CoefBunchQ-SP")
    field (FTF, "DOUBLE")
    field (NOF, "1")
    #manually set offset for zeroing noise   
    field (INPG, "${MON}ZeroingOffset-SP")
    field (FTG, "DOUBLE")
    field (NOG, "1")
    #acquisition time out(ms): AcqrsD1_waitForEndOfAcquisition(id, timeout);
    field (INPH, "${MON}AcqTimeout-SP")
    field (FTH, "LONG")
    field (NOH, "1")
    #get start sample point of selected region   
    field (INPI, "${MON}StartPoint-SP")
    field (FTI, "ULONG")
    field (NOI, "1")    
    #get end sample point of selected region   
    field (INPJ, "${MON}EndPoint-SP")
    field (FTJ, "ULONG")
    field (NOJ, "1")   
    ## aSub only has fields from A to U: use unused INP* instead of OUT*
    #Max/Min single bunch charge within the bunch-train
    #field (INPK, "${MON}MaxQ-I PP")
    field (INPK, "${MON}MaxQ-I")
    field (FTK, "DOUBLE")
    field (NOK, "1") 
    field (INPL, "${MON}MinQ-I")
    field (FTL, "DOUBLE")
    field (NOL, "1")    
    #the whole bunch-train charge by summing individual bunch charge
    field (INPM, "${MON}SumQ-I")
    field (FTM, "DOUBLE")
    field (NOM, "1")   
    #manually setup zeroing offset or automatically calculated? 
    field (INPN, "${MON}AutoZeroing-Sel.RVAL")
    field (FTN, "SHORT")
    field (NON, "1")
    #INPO is reserved for ${MON}AutoZeroingOffset-I
    #voltage waveform data converted from raw data (8-, 12-, or 16-bit)           
    field (OUTA, "${MON}V-Wf PP")
    field (FTVA, "DOUBLE")
    field (NOVA, "${NELM}")
    #max & min voltages               
    field (OUTB, "${MON}MaxV-I PP")
    field (FTVB, "DOUBLE")
    field (NOVB, "1")
    field (OUTC, "${MON}MinV-I PP")
    field (FTVC, "DOUBLE")
    field (NOVC, "1")
    #average value (Sum is not DC component), standard deviation/RMS noise
    field (OUTD, "${MON}AveV-I PP")
    field (FTVD, "DOUBLE")
    field (NOVD, "1")
    field (OUTE, "${MON}StdV-I PP")
    field (FTVE, "DOUBLE")
    field (NOVE, "1")
    #Number of bunches
    field (OUTF, "${MON}NbrBunches-I PP")
    field (FTVF, "LONG")
    field (NOVF, "1")
    #normalized Filling pattern(max. 150 bunches for NSLS2): 0.85, 1.00, ... 
    field (OUTG, "${MON}FillPattern-Wf PP")
    field (FTVG, "DOUBLE")
    field (NOVG, "150")
    #Max. bunch-to-bunch charge variation < 20%
    field (OUTH, "${MON}B2BMaxVar-I PP")
    field (FTVH, "DOUBLE")
    field (NOVH, "1")
    #individual bunch charge (Q) calibrated against nearby ICT
    field (OUTI, "${MON}BunchQCalib-Wf PP")
    field (FTVI, "DOUBLE")
    field (NOVI, "150")
    #Which bunch has the highest/max. charge
    field (OUTJ, "${MON}MaxQBunchNbr-I PP")
    field (FTVJ, "LONG")
    field (NOVJ, "1")
    #Which bunch has the lowest/min. charge
    field (OUTK, "${MON}MinQBunchNbr-I PP")
    field (FTVK, "LONG")
    field (NOVK, "1")
    #integral value of individual bunch(max. 150 bunches for NSLS2) 
    ##calculate bunch charge by integrating samples: wall current monitor 
    field (OUTL, "${MON}BunchQ-Wf PP")
    field (FTVL, "DOUBLE")
    field (NOVL, "150")
    #where are the peaks: position/index in '${MON}V-Wf'
    field (OUTM, "${MON}PeakIndex-Wf PP")
    #LONG equals to int?
    field (FTVM, "LONG")
    field (NOVM, "150")
    #calculate real external trigger rate ~ = ioc update rate
    field (OUTN, "${MON}TrigRate-I PP")
    field (FTVN, "DOUBLE")
    field (NOVN, "1")
    #data processing results: mean, max, min, sum, std, etc.   
    #over part of the waveform (selected region) and within the whole waveform
    field (OUTO, "${MON}SumV-I PP")
    field (FTVO, "DOUBLE")
    field (NOVO, "1")    
    field (OUTP, "${MON}AveVROI-I PP")
    field (FTVP, "DOUBLE")
    field (NOVP, "1")
    field (OUTQ, "${MON}MaxVROI-I PP")
    field (FTVQ, "DOUBLE")
    field (NOVQ, "1")
    field (OUTR, "${MON}MinVROI-I PP")
    field (FTVR, "DOUBLE")
    field (NOVR, "1")
    field (OUTS, "${MON}SumVROI-I PP")
    field (FTVS, "DOUBLE")
    field (NOVS, "1")
    field (OUTT, "${MON}StdVROI-I PP")
    field (FTVT, "DOUBLE")
    field (NOVT, "1")    
    field (OUTU, "${MON}ROILength-I PP")
    field (FTVU, "DOUBLE")
    field (NOVU, "1") 
    ## aSub only has fields from A to U: use unused INP* instead of ONT*  
    field(FLNK,"${MON}MaxQ-I")
}

record(waveform,"${MON}V-Wf")
{
   field(SCAN,"Passive")
   field(DESC,"voltage waveform data by aSub")
   field(NELM,"${NELM}")
   field(FTVL,"DOUBLE")
   field(INP,"${MON}Raw-aSub_.VALA")
   field(PREC,"6")
   field(EGU,"V")
}

record(subArray,"${MON}VoltData-SubAr_")
{
   field(DESC,"part of the voltage waveform data")
   field(INP,"${MON}V-Wf CPP")
   #don't need to set subArray.MALM == waveform.NELM
   #field(MALM,"${NELM}")
   field(MALM,"40")
   field(INDX,"0")
   field(NELM,"40")
   field(FTVL,"DOUBLE")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}MaxV-I")
{
   field(DESC,"Max value")
   field(INP,"${MON}Raw-aSub_.VALB")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}MinV-I")
{
   field(DESC,"Min value")
   field(INP,"${MON}Raw-aSub_.VALC")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}AveV-I")
{
   field(DESC,"Averaged DC")
   field(INP,"${MON}Raw-aSub_.VALD")
   field(PREC,"6")
   field(EGU,"Volts")
}

record(ai,"${MON}StdV-I")
{
   field(DESC,"RMS noise")
   field(INP,"${MON}Raw-aSub_.VALE")
   field(PREC,"6")
   field(EGU,"V")
}

record(longin,"${MON}NbrBunches-I")
{
   field(DESC,"Number of bunches")
   field(INP,"${MON}Raw-aSub_.VALF")
   field(EGU,"bunches")
   field(FLNK,"${MON}SaveWf-Calc_")
}

#record(calcout, "${MON}SaveWf-calcout_")
#{
	#field(DESC,"saveWaveformIfHaveBeam")
	#field(INPA,"${MON}NbrBunch-I")
	#field(CALC,"(A>=1) ? 1:0")
	#field(OOPT,"When Non-zero")
	#field(DOPT,"Use CALC")
	#It seems OUT doesn't take PV, only take record?
	#filed(OUT,"${MON}VoltWf-Saved_.PROC")
	#filed(OUT,"${MON}VoltWf-Saved_.SDIS")
#}

record(calc, "${MON}SaveWf-Calc_")
{
	field(DESC,"saveWaveformIfHaveBeam")
	field(INPA,"${MON}NbrBunch-I")
	#disable scanning ${MON}VoltWf-Saved_ if A<1(no beam)
	field(CALC,"(A>=1) ? 0:1")
	field(FLNK,"${MON}VoltDataSaved-Wf_")
}

record(waveform,"${MON}VoltDataSaved-Wf_")
{
   field(DESC,"saved waveform data")
   #DISV is 1 by default
   field(SDIS,"${MON}SaveWf-Calc_")
   field(NELM,"${NELM}")
   field(FTVL,"FLOAT")
   field(INP,"${MON}V-Wf")
   field(PREC,"6")
   field(EGU,"V")
}

record(waveform,"${MON}FillPattern-Wf")
{
   field(DESC,"normalized filling pattern")
   field(INP,"${MON}Raw-aSub_.VALG")
   field(NELM,"150")
   field(FTVL,"DOUBLE")
   field(PREC,"4")
}

record(ai,"${MON}B2BMaxVar-I")
{
   field(DESC,"bunch-to-bunch max. variation")
   field(INP,"${MON}Raw-aSub_.VALH")
   field(PREC,"4")
}

#individual bunch charge (Q) calibrated against nearby ICT
record(waveform,"${MON}BunchQCalib-Wf")
{
   field(DESC,"Calibrated bunch charge")
   field(INP,"${MON}Raw-aSub_.VALI")
   field(NELM,"150")
   field(FTVL,"DOUBLE")
   field(PREC,"4")
   field(EGU,"nC")
}

record(longin,"${MON}MaxQBunchNbr-I")
{
   field(DESC,"No# highest charge")
   field(INP,"${MON}Raw-aSub_.VALJ")
}

record(longin,"${MON}MinQBunchNbr-I")
{
   field(DESC,"No# lowest charge")
   field(INP,"${MON}Raw-aSub_.VALK")
}

#calculate bunch charge by integrating samples: wall current monitor 
record(waveform,"${MON}BunchQ-Wf")
{
   #field(DESC,"IntegralValueOfEachBunch")
   field(DESC,"ChargeOfEachBunch")
   field(INP,"${MON}Raw-aSub_.VALL")
   field(NELM,"150")
   field(FTVL,"DOUBLE")
   field(PREC,"4")
   field(EGU,"nC")
}

record(subArray,"${MON}Bunch1Q-SubAr")
{
   field(DESC,"ChargeOfTheFirstBunch-subArray")
   field(INP,"${MON}BunchQ-Wf CPP")
   field(MALM,"150")
   field(INDX,"0")
   field(NELM,"1")
   field(FTVL,"DOUBLE")
   field(PREC,"4")
   field(EGU,"nC")
}

record(ai,"${MON}Bunch1Q-I")
{
   field(DESC,"ChargeOfTheFirstBunch")
   field(INP,"${MON}Bunch1Q-SubAr CPP")
   field(PREC,"4")
   field(EGU,"nC")
}

record(waveform,"${MON}PeakIndex-Wf")
{
   field(DESC,"index of peaks")
   field(INP,"${MON}Raw-aSub_.VALM")
   field(NELM,"150")
   field(FTVL,"LONG")
}

record(subArray,"${MON}FirstPeakPos-SubAr")
{
   field(DESC,"position of the first peak")
   field(INP,"${MON}PeakIndex-Wf CPP")
   field(MALM,"150")
   field(INDX,"0")
   field(NELM,"1")
   field(FTVL,"LONG")
}

record(longin,"${MON}FirstPeakPos-I")
{
   field(DESC,"position of the first peak")
   field(INP,"${MON}FirstPeakPos-SubAr CPP")
}

record(ai,"${MON}TrigRate-I")
{
   field(DESC,"precise trigRate")
   field(INP,"${MON}Raw-aSub_.VALN")
   field(PREC,"3")
   field(EGU,"Hz")
}

record(ai,"${MON}SumV-I")
{
   field(DESC,"sum voltage")
   field(INP,"${MON}Raw-aSub_.VALO")
   field(PREC,"6")
   #field(EGU,"V")
   field(EGU,"nC")
}

#processed data over ROI (region of interest)
record(ai,"${MON}AveVROI-I")
{
   field(DESC,"ROI averaged voltage")
   field(INP,"${MON}Raw-aSub_.VALP")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}MaxVROI-I")
{
   field(DESC,"ROI max. voltage")
   field(INP,"${MON}Raw-aSub_.VALQ")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}MinVROI-I")
{
   field(DESC,"ROI min. voltage")
   field(INP,"${MON}Raw-aSub_.VALR")
   field(PREC,"6")
   field(EGU,"V")
}

#integral V*T (ns.V=nC) over ROI is for FC charge
record(ai,"${MON}SumVROI-I")
{
   field(DESC,"ROI sum voltage")
   field(INP,"${MON}Raw-aSub_.VALS")
   field(PREC,"6")
   field(EGU,"nC")
   field(FLNK,"${MON}Q-Calc_")
}

record(ao,"${MON}QOffset-SP")
{
   field(DESC,"Charge offset")
   field(PREC,"3")
   field(EGU,"nC")
   field(FLNK,"${MON}Q-Calc_")
   info(autosaveFields_pass0, "VAL")
}

record(calcout,"${MON}Q-Calc_")
{
   field(DESC,"Beam charge calc")
   field(INPA,"${MON}SumVROI-I")
   #${MON}CoefBunchQ-SP is 1/50=0.02 for Faraday Cup
   field(INPB,"${MON}CoefBunchQ-SP")
   field(INPC,"${MON}QOffset-SP")
   field(CALC,"(ABS(A*B))-C")
   field(OUT, "${MON}Q-I PP")
   field(PREC,"6")
   field(EGU,"nC")
}

record(ai,"${MON}Q-I")
{
   field(DESC,"Beam charge based on ROI")
   field(PREC,"3")
   field(EGU,"nC")
   field(FLNK,"${MON}Buffer-aSub_")
}

record(ai,"${MON}StdVROI-I")
{
   field(DESC,"ROI std voltage")
   field(INP,"${MON}Raw-aSub_.VALT")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}ROILength-I")
{
   field(DESC,"ROI length: ns")
   field(INP,"${MON}Raw-aSub_.VALU")
   field(PREC,"1")
   field(EGU,"ns")
}

record(calc,"${MON}ROISamples-I")
{
   field(DESC,"Length of ROI")
   field(INPA,"${MON}StartPoint-SP")
   field(INPB,"${MON}EndPoint-SP")
   field(CALC,"B-A")
   field(PREC,"0")
   field(EGU,"samples")
}

#Buffer-aSub_ fits for FC
record(longin,"${MON}Shots-I")
{
   field(DESC,"shots changed in aSub")
   field(VAL,"0")
   field(INP,"${MON}Buffer-aSub_.C")
}

#averaging every interested number of shots(INOS)
#averaged Q over INOS is calculated from ${MON}AveQROIOverINOS-I
record(compress,"${MON}AveQOverINOS-I")
{
	field(DESC, "average Q over INOS")
	#INP is scalar
	field(INP,"${MON}Q-I CP")
	field(ALG,"N to 1 Average")
	field(NSAM,"1")
	#N can't be DB_LINK, must be constant
	#N can be changed to the interested number of shots at run-time
	field(N,"10")
	field(PREC,"3")
	field(EGU,"nC")
	info(autosaveFields_pass0, "N")
}
alias("${MON}AveQOverINOS-I","${MON}AveVROIOverINOS-I")

#see acqiris_asub_process.cpp: process INOS buffered data.
record(aSub,"${MON}Buffer-aSub_")
{
    field (DESC,"process buffered data")
    field (SNAM,"processBuf")
    field (INPA, "${MON}Q-I")
    field (FTA, "DOUBLE")
    field (NOA, "1")
    #N is the interested number of shots
    field (INPB, "${MON}AveQOverINOS-I.N")
    field (FTB, "ULONG")
    field (NOB, "1")
    field (INPC, "${MON}Shots-I PP")
    field (FTC, "ULONG")
    field (NOC, "1")
    #${MON}StdQOverINOS-I is calculate from ${MON}StdVROIOverINOS-I
    field (OUTA, "${MON}StdQOverINOS-I PP")
    field (FTVA, "DOUBLE")
    field (NOVA, "1")
    field (OUTB, "${MON}Q-Buf_ PP")
    field (FTVB, "DOUBLE")
    field (NOVB, "60")
}

record(ai,"${MON}StdQOverINOS-I")
{
   field(DESC,"std charge over INOS")
   field(INP,"${MON}Buffer-aSub_.VALA")
   field(PREC,"3")
   field(EGU,"nC")
}

record(waveform,"${MON}Q-Buf_")
{
   field(DESC,"Q buffer")
   field(INP,"${MON}Buffer-aSub_.VALB")
   field(NELM,"60")
   field(FTVL,"DOUBLE")
   field(PREC,"6")
   field(EGU,"nC")
}

#SumQBuffer-aSub_ for FCT and WCM
record(longin,"${MON}SumQShots-I")
{
   field(DESC,"shots changed in aSub")
   field(VAL,"0")
   field(INP,"${MON}SumQBuffer-aSub_.C")
}

#averaging every interested number of shots(INOS)
#averaged sumQ over INOS is calculated from ${MON}AveSumQROIOverINOS-I
record(compress,"${MON}AveSumQOverINOS-I")
{
	field(DESC, "average SumQ over INOS")
	#INP is scalar
	field(INP,"${MON}SumQ-I CP")
	field(ALG,"N to 1 Average")
	field(NSAM,"1")
	#N can't be DB_LINK, must be constant
	#N can be changed to the interested number of shots at run-time
	field(N,"10")
	field(PREC,"3")
	field(EGU,"nC")
	info(autosaveFields_pass0, "N")
	#FLNK won't work: if 1Hz & N=2, StdSumQOverINOS-I will update at 1/6 Hz
	#field(FLNK,"${MON}SumQBuffer-aSub_")
}
alias("${MON}AveSumQOverINOS-I","${MON}AveSumVROIOverINOS-I")

#see acqiris_asub_process.cpp: process INOS buffered data.
record(aSub,"${MON}SumQBuffer-aSub_")
{
    field (DESC,"process buffered data")
    field (SNAM,"processBuf")
    field (INPA, "${MON}SumQ-I CP")
    field (FTA, "DOUBLE")
    field (NOA, "1")
    #N is the interested number of shots
    field (INPB, "${MON}AveSumQOverINOS-I.N")
    field (FTB, "ULONG")
    field (NOB, "1")
    field (INPC, "${MON}SumQShots-I PP")
    field (FTC, "ULONG")
    field (NOC, "1")
    #${MON}StdQOverINOS-I is calculate from ${MON}StdVROIOverINOS-I
    field (OUTA, "${MON}StdSumQOverINOS-I PP")
    field (FTVA, "DOUBLE")
    field (NOVA, "1")
    field (OUTB, "${MON}SumQ-Buf_ PP")
    field (FTVB, "DOUBLE")
    field (NOVB, "60")
}

record(ai,"${MON}StdSumQOverINOS-I")
{
   field(DESC,"std sumQ charge over INOS")
   field(INP,"${MON}SumQBuffer-aSub_.VALA")
   field(PREC,"3")
   field(EGU,"nC")
}

record(waveform,"${MON}SumQ-Buf_")
{
   field(DESC,"sumQ buffer")
   field(INP,"${MON}SumQBuffer-aSub_.VALB")
   field(NELM,"60")
   field(FTVL,"DOUBLE")
   field(PREC,"3")
   field(EGU,"nC")
}

record(ai,"${MON}MaxQ-I")
{
   field(DESC,"Max bunch charge within bunch-train")
   #CP doesn't work here for aSub.field
   field(INP,"${MON}Raw-aSub_.K")
   field(PREC,"3")
   field(EGU,"nC")
   field(FLNK,"${MON}MinQ-I")
}

record(ai,"${MON}MinQ-I")
{
   field(DESC,"Min bunch charge within bunch-train")
   field(INP,"${MON}Raw-aSub_.L")
   field(PREC,"3")
   field(EGU,"nC")
   field(FLNK,"${MON}SumQ-I")
}

record(ai,"${MON}SumQ-I")
{
   field(DESC,"bunch-train charge of FCT")
   field(INP,"${MON}Raw-aSub_.M")
   field(PREC,"3")
   field(EGU,"nC")
   field(MDEL,"-1")
   field(FLNK,"${MON}AutoZeroingOffset-I")
}


###
record(mbbo,"${MON}Coupling-Sel")
{
   field(DESC,"Channel Coupling")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CCPLN")
   field(PINI,"YES")
   field(SCAN,"Passive")
   field(ZRVL,"0")
   field(ZRST,"Ground")
   field(ONVL,"1")
   field(ONST,"DC")
   field(TWVL,"2")
   field(TWST,"AC")
   field(THVL,"3")
   field(THST,"DC_50_Ohm")
   field(FRVL,"4")
   field(FRST,"AC_50_Ohm")
   info(autosaveFields_pass0, "RVAL")
}

record(mbbo,"${MON}Bandwidth-Sel")
{
   field(DESC,"Bandwidth")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CBNDW")
   field(PINI,"YES")
   field(SCAN,"Passive")
   field(ZRVL,"0")
   field(ZRST,"No_Limit")
   field(ONVL,"1")
   field(ONST,"25Mhz")
   field(TWVL,"2")
   field(TWST,"700MHz")
   field(THVL,"3")
   field(THST,"200Mhz")
   field(FRVL,"4")
   field(FRST,"20Mhz")
   field(FVVL,"5")
   field(FVST,"35Mhz")
   info(autosaveFields_pass0, "RVAL")
}

record(mbbo,"${MON}TrigCoupling-Sel")
{
   field(DESC,"Channel TrigCoupling")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CTRCP")
   field(PINI,"YES")
   field(SCAN,"Passive")
   field(ZRVL,"0")
   field(ZRST,"DC")
   field(ONVL,"1")
   field(ONST,"AC")
   field(TWVL,"2")
   field(TWST,"HF_Reject")
   field(THVL,"3")
   field(THST,"DC_50_Ohm")
   field(FRVL,"4")
   field(FRST,"AC_50_Ohm")
   info(autosaveFields_pass0, "RVAL")
}

record(mbbo,"${MON}TrigSlope-Sel")
{
   field(DESC,"Channel TrigSlope")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CTRSL")
   field(PINI,"YES")
   field(SCAN,"Passive")
   field(ZRVL,"0")
   field(ZRST,"Positive")
   field(ONVL,"1")
   field(ONST,"Negative")
   field(TWVL,"2")
   field(TWST,"Out_of_Window")
   field(THVL,"3")
   field(THST,"Into_Window")
   field(FRVL,"4")
   field(FRST,"HF_Divide")
   field(FVVL,"5")
   field(FVST,"Spike_Stretcher")
   info(autosaveFields_pass0, "RVAL")
}

record(ao,"${MON}TrigLevel1-SP")
{
   field(DESC,"Channel TrigLevel1")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CTRL1")
   field(PINI,"YES")
   field(SCAN,"Passive")
   field(DRVH,"50")
   field(DRVL,"0")
   field(HOPR,"50")
   field(LOPR,"0") 
   field(EGU,"%")
   #info(autosaveFields_pass0, "RVAL")
   info(autosaveFields_pass1, "VAL")
}

record(ao,"${MON}TrigLevel2-SP")
{
   field(DESC,"Channel TrigLevel2 for Window TrigSlope")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CTRL2")
   field(PINI,"YES")
   field(SCAN,"Passive")
   field(DRVH,"50")
   field(DRVL,"0")
   field(HOPR,"50")
   field(LOPR,"0") 
   field(EGU,"%")
   #info(autosaveFields_pass0, "RVAL")
   info(autosaveFields_pass1, "VAL")
}

record(stringout, "$(MON)FilePath") 
{
   field(DESC, "Data log dir path")
   field(PINI, "YES")
   field(VAL, "/home/yhu")
   info(autosaveFields, "VAL")
}

#the following records are original version from SLAC
record(ai,"${MON}TrigLevelRange")
{
   field(DESC,"TrigLevelRange")
   field(DTYP,"acqiris")
   field(INP,"@M${MODULE} C${CHANNEL} CTLRG")
   field(PINI,"YES")
   field(SCAN,"Passive")
}

record(longin,"${MON}OverloadStatus")
{
   field(DESC,"OverloadStatus")
   field(DTYP,"acqiris")
   field(INP,"@M${MODULE} C${CHANNEL} COVST")
   field(PINI,"YES")
   field(SCAN,"Passive")
}

record(longout,"${MON}DitherRange")
{
   field(DESC,"DitherRange")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CDTRN")
   field(PINI,"YES")
   field(SCAN,"Passive")
}

record(longout,"${MON}FixedSamples")
{
   field(DESC,"FixedSamples")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CFXSM")
   field(PINI,"YES")
   field(SCAN,"Passive")
}

record(mbbo,"${MON}GateType")
{
   field(DESC,"GateType")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CGTTP")
   field(PINI,"YES")
   field(SCAN,"Passive")
   field(ONVL,"1")
   field(ONST,"User_Gates")
   field(TWVL,"2")
   field(TWST,"Threshold_Gates")
}

record(mbbo,"${MON}HistoTDCEnable")
{
   field(DESC,"HistoTDCEnable")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CHTDE")
   field(PINI,"YES")
   field(SCAN,"Passive")
   field(ZRVL,"0")
   field(ZRST,"Disabled")
   field(ONVL,"1")
   field(ONST,"Enabled")
}

record(mbbo,"${MON}InvertData")
{
   field(DESC,"InvertData")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CINDT")
   field(PINI,"YES")
   field(SCAN,"Passive")
   field(ZRVL,"0")
   field(ZRST,"No_Inversion")
   field(ONVL,"1")
   field(ONST,"Inversion")
}

record(longout,"${MON}NbrMaxGates")
{
   field(DESC,"NbrMaxGates")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CNMXG")
   field(PINI,"YES")
   field(SCAN,"Passive")
}

record(longout,"${MON}NbrSamples")
{
   field(DESC,"NbrSamples")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CNSML")
   field(PINI,"YES")
   field(SCAN,"Passive")
}

record(longout,"${MON}NbrSegments")
{
   field(DESC,"NbrSegments")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CNSGM")
   field(PINI,"YES")
   field(SCAN,"Passive")
}

record(longout,"${MON}NbrWaveforms")
{
   field(DESC,"NbrWaveforms")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CNWVF")
   field(PINI,"YES")
   field(SCAN,"Passive")
}

record(longout,"${MON}NbrRoundRobins")
{
   field(DESC,"NbrRoundRobins")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CNRRB")
   field(PINI,"YES")
   field(SCAN,"Passive")
}

record(longout,"${MON}NoiseBaseEnable")
{
   field(DESC,"NoiseBaseEnable")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CNBEN")
   field(PINI,"YES")
   field(SCAN,"Passive")
}

record(ao,"${MON}NoiseBase")
{
   field(DESC,"NoiseBase")
   field(DTYP,"acqiris")
   field(OUT,"@M${MODULE} C${CHANNEL} CNSBS")
   field(PINI,"YES")
   field(SCAN,"Passive")
}


